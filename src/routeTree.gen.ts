/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SmfmPicksRouteImport } from './routes/smfm-picks'
import { Route as SearchRouteImport } from './routes/search'
import { Route as ScheduleRouteImport } from './routes/schedule'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as ChatroomRouteImport } from './routes/chatroom'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ShowsIndexRouteImport } from './routes/shows/index'
import { Route as NewsIndexRouteImport } from './routes/news/index'
import { Route as EpisodesIndexRouteImport } from './routes/episodes/index'
import { Route as ArtistsIndexRouteImport } from './routes/artists/index'
import { Route as ShowsSlugRouteImport } from './routes/shows/$slug'
import { Route as NewsSlugRouteImport } from './routes/news/$slug'
import { Route as EpisodesSlugRouteImport } from './routes/episodes/$slug'
import { Route as ArtistsSlugRouteImport } from './routes/artists/$slug'
import { Route as TagsTypeValueRouteImport } from './routes/tags/$type.$value'

const SmfmPicksRoute = SmfmPicksRouteImport.update({
  id: '/smfm-picks',
  path: '/smfm-picks',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const ScheduleRoute = ScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatroomRoute = ChatroomRouteImport.update({
  id: '/chatroom',
  path: '/chatroom',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShowsIndexRoute = ShowsIndexRouteImport.update({
  id: '/shows/',
  path: '/shows/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsIndexRoute = NewsIndexRouteImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => rootRouteImport,
} as any)
const EpisodesIndexRoute = EpisodesIndexRouteImport.update({
  id: '/episodes/',
  path: '/episodes/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtistsIndexRoute = ArtistsIndexRouteImport.update({
  id: '/artists/',
  path: '/artists/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShowsSlugRoute = ShowsSlugRouteImport.update({
  id: '/shows/$slug',
  path: '/shows/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsSlugRoute = NewsSlugRouteImport.update({
  id: '/news/$slug',
  path: '/news/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const EpisodesSlugRoute = EpisodesSlugRouteImport.update({
  id: '/episodes/$slug',
  path: '/episodes/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtistsSlugRoute = ArtistsSlugRouteImport.update({
  id: '/artists/$slug',
  path: '/artists/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const TagsTypeValueRoute = TagsTypeValueRouteImport.update({
  id: '/tags/$type/$value',
  path: '/tags/$type/$value',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/chatroom': typeof ChatroomRoute
  '/contact': typeof ContactRoute
  '/schedule': typeof ScheduleRoute
  '/search': typeof SearchRoute
  '/smfm-picks': typeof SmfmPicksRoute
  '/artists/$slug': typeof ArtistsSlugRoute
  '/episodes/$slug': typeof EpisodesSlugRoute
  '/news/$slug': typeof NewsSlugRoute
  '/shows/$slug': typeof ShowsSlugRoute
  '/artists': typeof ArtistsIndexRoute
  '/episodes': typeof EpisodesIndexRoute
  '/news': typeof NewsIndexRoute
  '/shows': typeof ShowsIndexRoute
  '/tags/$type/$value': typeof TagsTypeValueRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/chatroom': typeof ChatroomRoute
  '/contact': typeof ContactRoute
  '/schedule': typeof ScheduleRoute
  '/search': typeof SearchRoute
  '/smfm-picks': typeof SmfmPicksRoute
  '/artists/$slug': typeof ArtistsSlugRoute
  '/episodes/$slug': typeof EpisodesSlugRoute
  '/news/$slug': typeof NewsSlugRoute
  '/shows/$slug': typeof ShowsSlugRoute
  '/artists': typeof ArtistsIndexRoute
  '/episodes': typeof EpisodesIndexRoute
  '/news': typeof NewsIndexRoute
  '/shows': typeof ShowsIndexRoute
  '/tags/$type/$value': typeof TagsTypeValueRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/chatroom': typeof ChatroomRoute
  '/contact': typeof ContactRoute
  '/schedule': typeof ScheduleRoute
  '/search': typeof SearchRoute
  '/smfm-picks': typeof SmfmPicksRoute
  '/artists/$slug': typeof ArtistsSlugRoute
  '/episodes/$slug': typeof EpisodesSlugRoute
  '/news/$slug': typeof NewsSlugRoute
  '/shows/$slug': typeof ShowsSlugRoute
  '/artists/': typeof ArtistsIndexRoute
  '/episodes/': typeof EpisodesIndexRoute
  '/news/': typeof NewsIndexRoute
  '/shows/': typeof ShowsIndexRoute
  '/tags/$type/$value': typeof TagsTypeValueRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/chatroom'
    | '/contact'
    | '/schedule'
    | '/search'
    | '/smfm-picks'
    | '/artists/$slug'
    | '/episodes/$slug'
    | '/news/$slug'
    | '/shows/$slug'
    | '/artists'
    | '/episodes'
    | '/news'
    | '/shows'
    | '/tags/$type/$value'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/chatroom'
    | '/contact'
    | '/schedule'
    | '/search'
    | '/smfm-picks'
    | '/artists/$slug'
    | '/episodes/$slug'
    | '/news/$slug'
    | '/shows/$slug'
    | '/artists'
    | '/episodes'
    | '/news'
    | '/shows'
    | '/tags/$type/$value'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/chatroom'
    | '/contact'
    | '/schedule'
    | '/search'
    | '/smfm-picks'
    | '/artists/$slug'
    | '/episodes/$slug'
    | '/news/$slug'
    | '/shows/$slug'
    | '/artists/'
    | '/episodes/'
    | '/news/'
    | '/shows/'
    | '/tags/$type/$value'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ChatroomRoute: typeof ChatroomRoute
  ContactRoute: typeof ContactRoute
  ScheduleRoute: typeof ScheduleRoute
  SearchRoute: typeof SearchRoute
  SmfmPicksRoute: typeof SmfmPicksRoute
  ArtistsSlugRoute: typeof ArtistsSlugRoute
  EpisodesSlugRoute: typeof EpisodesSlugRoute
  NewsSlugRoute: typeof NewsSlugRoute
  ShowsSlugRoute: typeof ShowsSlugRoute
  ArtistsIndexRoute: typeof ArtistsIndexRoute
  EpisodesIndexRoute: typeof EpisodesIndexRoute
  NewsIndexRoute: typeof NewsIndexRoute
  ShowsIndexRoute: typeof ShowsIndexRoute
  TagsTypeValueRoute: typeof TagsTypeValueRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/smfm-picks': {
      id: '/smfm-picks'
      path: '/smfm-picks'
      fullPath: '/smfm-picks'
      preLoaderRoute: typeof SmfmPicksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/schedule': {
      id: '/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof ScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chatroom': {
      id: '/chatroom'
      path: '/chatroom'
      fullPath: '/chatroom'
      preLoaderRoute: typeof ChatroomRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shows/': {
      id: '/shows/'
      path: '/shows'
      fullPath: '/shows'
      preLoaderRoute: typeof ShowsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/episodes/': {
      id: '/episodes/'
      path: '/episodes'
      fullPath: '/episodes'
      preLoaderRoute: typeof EpisodesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artists/': {
      id: '/artists/'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof ArtistsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shows/$slug': {
      id: '/shows/$slug'
      path: '/shows/$slug'
      fullPath: '/shows/$slug'
      preLoaderRoute: typeof ShowsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/$slug': {
      id: '/news/$slug'
      path: '/news/$slug'
      fullPath: '/news/$slug'
      preLoaderRoute: typeof NewsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/episodes/$slug': {
      id: '/episodes/$slug'
      path: '/episodes/$slug'
      fullPath: '/episodes/$slug'
      preLoaderRoute: typeof EpisodesSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artists/$slug': {
      id: '/artists/$slug'
      path: '/artists/$slug'
      fullPath: '/artists/$slug'
      preLoaderRoute: typeof ArtistsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tags/$type/$value': {
      id: '/tags/$type/$value'
      path: '/tags/$type/$value'
      fullPath: '/tags/$type/$value'
      preLoaderRoute: typeof TagsTypeValueRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ChatroomRoute: ChatroomRoute,
  ContactRoute: ContactRoute,
  ScheduleRoute: ScheduleRoute,
  SearchRoute: SearchRoute,
  SmfmPicksRoute: SmfmPicksRoute,
  ArtistsSlugRoute: ArtistsSlugRoute,
  EpisodesSlugRoute: EpisodesSlugRoute,
  NewsSlugRoute: NewsSlugRoute,
  ShowsSlugRoute: ShowsSlugRoute,
  ArtistsIndexRoute: ArtistsIndexRoute,
  EpisodesIndexRoute: EpisodesIndexRoute,
  NewsIndexRoute: NewsIndexRoute,
  ShowsIndexRoute: ShowsIndexRoute,
  TagsTypeValueRoute: TagsTypeValueRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
